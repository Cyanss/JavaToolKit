<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cyan.toolkit.token.mapper.UserMapper">
    <resultMap type="cyan.toolkit.token.entity.UserInfoEntity" id="userInfoResultMap">
        <id property="id" column="id"/>
        <result property="account" column="account"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
        <result property="role" column="role"/>
        <result property="authority" column="authority"/>
        <result property="status" column="status"/>
        <result property="level" column="level"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap type="cyan.toolkit.token.entity.UserDetailEntity" id="userDetailResultMap">
        <id property="id" column="id"/>
        <result property="account" column="account"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
        <result property="role" column="role"/>
        <result property="authority" column="authority"/>
        <result property="status" column="status"/>
        <result property="level" column="level"/>
        <result property="password" column="password"/>
        <result property="mobile" column="mobile"/>
        <result property="address" column="address"/>
        <result property="signature" column="signature"/>
        <result property="description" column="description"/>
        <result property="registime" column="registime"/>
        <result property="activatime" column="activatime"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="user_all_column">
        id, "account", "nickname", "avatar", "role", "status", "level"
    </sql>

    <sql id="user_info_all_column">
        <include refid="user_all_column"/>, create_time, update_time
    </sql>

    <sql id="user_detail_all_column">
        <include refid="user_all_column"/>, "password", "mobile", "address", "signature", "description", "registime", "activatime", create_time, update_time
    </sql>

    <insert id="save">
        INSERT INTO token_user_list ( <include refid="user_detail_all_column"/> )
        VALUES (
        #{entity.id},
        #{entity.account},
        #{entity.nickname},
        #{entity.avatar},
        #{entity.role},
        #{entity.authority},
        #{entity.status},
        #{entity.level},
        #{entity.password},
        #{entity.mobile},
        #{entity.address},
        #{entity.signature},
        #{entity.description},
        #{entity.registime},
        #{entity.activatime},
        now(),
        now()
        ) ON CONFLICT (id) DO UPDATE
        <set>
            "account" = CASE WHEN EXCLUDED."account" IS NOT NULL THEN EXCLUDED."account" ELSE token_user_list."account" END,
            "nickname" = CASE WHEN EXCLUDED."nickname" IS NOT NULL THEN EXCLUDED."nickname" ELSE token_user_list."nickname" END,
            "avatar" = CASE WHEN EXCLUDED."avatar" IS NOT NULL THEN EXCLUDED."avatar" ELSE token_user_list."avatar" END,
            "role" = CASE WHEN EXCLUDED."role" IS NOT NULL THEN EXCLUDED."role" ELSE token_user_list."role" END,
            "authority" = CASE WHEN EXCLUDED."authority" IS NOT NULL THEN EXCLUDED."authority" ELSE token_user_list."authority" END,
            "status" = CASE WHEN EXCLUDED."status" IS NOT NULL THEN EXCLUDED."status" ELSE token_user_list."status" END,
            "level" = CASE WHEN EXCLUDED."level" IS NOT NULL THEN EXCLUDED."level" ELSE token_user_list."level" END,
            "password" = CASE WHEN EXCLUDED."password" IS NOT NULL THEN EXCLUDED."password" ELSE token_user_list."password" END,
            "mobile" = CASE WHEN EXCLUDED."mobile" IS NOT NULL THEN EXCLUDED."mobile" ELSE token_user_list."mobile" END,
            "address" = CASE WHEN EXCLUDED."address" IS NOT NULL THEN EXCLUDED."address" ELSE token_user_list."address" END,
            "signature" = CASE WHEN EXCLUDED."signature" IS NOT NULL THEN EXCLUDED."signature" ELSE token_user_list."signature" END,
            "description" = CASE WHEN EXCLUDED."description" IS NOT NULL THEN EXCLUDED."description" ELSE token_user_list."description" END,
            "registime" = CASE WHEN EXCLUDED."registime" IS NOT NULL THEN EXCLUDED."registime" ELSE token_user_list."registime" END,
            "activatime" = CASE WHEN EXCLUDED."activatime" IS NOT NULL THEN EXCLUDED."activatime" ELSE token_user_list."activatime" END,
            update_time = now()
        </set>
    </insert>

    <update id="saveAll">
        INSERT INTO token_user_list (
        <include refid="user_detail_all_column"/>
        )
        VALUES
        <foreach item="entity" index="index" collection="entityList" separator=",">
            (
            #{entity.id},
            #{entity.account},
            #{entity.nickname},
            #{entity.avatar},
            #{entity.role},
            #{entity.authority},
            #{entity.status},
            #{entity.level},
            #{entity.password},
            #{entity.mobile},
            #{entity.address},
            #{entity.signature},
            #{entity.description},
            #{entity.registime},
            #{entity.activatime},
            now(),
            now()
            )
        </foreach>
        ON CONFLICT (id) DO UPDATE
        <set>
            "account" = CASE WHEN EXCLUDED."account" IS NOT NULL THEN EXCLUDED."account" ELSE token_user_list."account" END,
            "nickname" = CASE WHEN EXCLUDED."nickname" IS NOT NULL THEN EXCLUDED."nickname" ELSE token_user_list."nickname" END,
            "avatar" = CASE WHEN EXCLUDED."avatar" IS NOT NULL THEN EXCLUDED."avatar" ELSE token_user_list."avatar" END,
            "role" = CASE WHEN EXCLUDED."role" IS NOT NULL THEN EXCLUDED."role" ELSE token_user_list."role" END,
            "authority" = CASE WHEN EXCLUDED."authority" IS NOT NULL THEN EXCLUDED."authority" ELSE token_user_list."authority" END,
            "status" = CASE WHEN EXCLUDED."status" IS NOT NULL THEN EXCLUDED."status" ELSE token_user_list."status" END,
            "level" = CASE WHEN EXCLUDED."level" IS NOT NULL THEN EXCLUDED."level" ELSE token_user_list."level" END,
            "password" = CASE WHEN EXCLUDED."password" IS NOT NULL THEN EXCLUDED."password" ELSE token_user_list."password" END,
            "mobile" = CASE WHEN EXCLUDED."mobile" IS NOT NULL THEN EXCLUDED."mobile" ELSE token_user_list."mobile" END,
            "address" = CASE WHEN EXCLUDED."address" IS NOT NULL THEN EXCLUDED."address" ELSE token_user_list."address" END,
            "signature" = CASE WHEN EXCLUDED."signature" IS NOT NULL THEN EXCLUDED."signature" ELSE token_user_list."signature" END,
            "description" = CASE WHEN EXCLUDED."description" IS NOT NULL THEN EXCLUDED."description" ELSE token_user_list."description" END,
            "registime" = CASE WHEN EXCLUDED."registime" IS NOT NULL THEN EXCLUDED."registime" ELSE token_user_list."registime" END,
            "activatime" = CASE WHEN EXCLUDED."activatime" IS NOT NULL THEN EXCLUDED."activatime" ELSE token_user_list."activatime" END,
            update_time = now()
        </set>
    </update>

    <delete id="deleteById">
        DELETE FROM token_user_list
        WHERE id = #{id}
    </delete>

    <delete id="deleteAll">
        DELETE FROM token_user_list
        WHERE id IN
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="findById" resultMap="userDetailResultMap">
        SELECT<include refid="user_info_all_column"/>
        FROM token_user_list
        WHERE id = #{id}
    </select>

    <select id="findAll" resultMap="userDetailResultMap">
        SELECT
        <choose>
            <when test="loadParams.length > 0 and loadParams[0]">
                <include refid="user_info_all_column"/>
            </when>
            <otherwise>
                <include refid="user_detail_all_column"/>
            </otherwise>
        </choose>
        FROM token_user_list
        WHERE id IN
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="findAllByWhere" resultMap="userInfoResultMap">
        SELECT
        <include refid="user_info_all_column"/>
        FROM token_user_list
        WHERE 1=1
        <if test="whereSql!=null">
            ${whereSql}
        </if>
    </select>

    <delete id="deleteAllByWhere">
        DELETE FROM token_user_list
        WHERE 1=1
        <if test="whereSql!=null">
            ${whereSql}
        </if>
    </delete>

    <select id="findByAccount" resultMap="userInfoResultMap">
        SELECT <include refid="user_info_all_column"/>
        FROM token_user_list
        WHERE account = #{account}
    </select>

    <select id="findByAccountAndNotId" resultMap="userInfoResultMap">
        SELECT <include refid="user_info_all_column"/>
        FROM token_user_list
        WHERE account = #{account}
        AND id != #{id}
    </select>

</mapper>