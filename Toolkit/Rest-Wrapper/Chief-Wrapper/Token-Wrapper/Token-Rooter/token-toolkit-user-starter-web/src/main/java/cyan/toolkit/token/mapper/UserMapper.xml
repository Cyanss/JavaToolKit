<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cyan.toolkit.token.mapper.UserMapper">
    <resultMap type="cyan.toolkit.token.entity.UserInfoEntity" id="userInfoResultMap">
        <id property="id" column="id"/>
        <result property="account" column="account"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
        <result property="role" column="role"/>
        <result property="status" column="status"/>
        <result property="level" column="level"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <resultMap type="cyan.toolkit.token.entity.UserDetailEntity" id="userDetailResultMap">
        <id property="id" column="id"/>
        <result property="account" column="account"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
        <result property="role" column="role"/>
        <result property="status" column="status"/>
        <result property="level" column="level"/>
        <result property="password" column="password"/>
        <result property="mobile" column="mobile"/>
        <result property="address" column="address"/>
        <result property="signature" column="signature"/>
        <result property="description" column="description"/>
        <result property="registime" column="registime"/>
        <result property="activatime" column="activatime"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="user_all_column">
        id, "account", "nickname", "avatar", "role", "status", "level"
    </sql>

    <sql id="user_info_all_column">
        <include refid="user_all_column"/>, create_time, update_time
    </sql>

    <sql id="user_detail_all_column">
        <include refid="user_all_column"/>, "password", "mobile", "address", "signature", "description", "registime", "activatime", create_time, update_time
    </sql>

    <insert id="save">
        INSERT INTO token_user_list ( <include refid="user_detail_all_column"/> )
        VALUES (
        #{entity.id},
        #{entity.account},
        #{entity.nickname},
        #{entity.avatar},
        #{entity.role},
        #{entity.status},
        #{entity.level},
        #{entity.password},
        #{entity.mobile},
        #{entity.address},
        #{entity.signature},
        #{entity.description},
        #{entity.registime},
        #{entity.activatime},
        now(),
        now()
        ) ON CONFLICT (id) DO UPDATE
        <set>
            "name" = CASE WHEN EXCLUDED."name" IS NOT NULL THEN EXCLUDED."name" ELSE cy_tk_cf_simple."name" END,
            "description" = CASE WHEN EXCLUDED."description" IS NOT NULL THEN EXCLUDED."description" ELSE cy_tk_cf_simple."description" END,
            "time" = CASE WHEN EXCLUDED."time" IS NOT NULL THEN EXCLUDED."time" ELSE cy_tk_cf_simple."time" END,
            update_time = now()
        </set>
    </insert>

    <update id="saveAll">
        INSERT INTO cy_tk_cf_simple (
        <include refid="all_column"/>
        )
        VALUES
        <foreach item="entity" index="index" collection="entityList" separator=",">
            (
            #{entity.id},
            #{entity.name},
            #{entity.description},
            #{entity.time},
            now(),
            now()
            )
        </foreach>
        ON CONFLICT (id) DO UPDATE
        <set>
            "name" = CASE WHEN EXCLUDED."name" IS NOT NULL THEN EXCLUDED."name" ELSE cy_tk_cf_simple."name" END,
            "description" = CASE WHEN EXCLUDED."description" IS NOT NULL THEN EXCLUDED."description" ELSE cy_tk_cf_simple."description" END,
            "time" = CASE WHEN EXCLUDED."time" IS NOT NULL THEN EXCLUDED."time" ELSE cy_tk_cf_simple."time" END,
            update_time = now()
        </set>
    </update>

    <delete id="deleteById">
        DELETE FROM cy_tk_cf_simple
        WHERE id = #{id}
    </delete>

    <delete id="deleteAll">
        DELETE FROM cy_tk_cf_simple
        WHERE id IN
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="findById" resultMap="simpleResultMap">
        SELECT<include refid="all_column"/>
        FROM cy_tk_cf_simple
        WHERE id = #{id}
    </select>

    <select id="findAll" resultMap="simpleResultMap">
        SELECT
        <include refid="all_column"/>
        FROM cy_tk_cf_simple
        WHERE id IN
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="findAllByWhere" resultMap="simpleResultMap">
        SELECT
        <include refid="all_column"/>
        FROM cy_tk_cf_simple
        WHERE 1=1
        <if test="whereSql!=null">
            ${whereSql}
        </if>
    </select>

    <delete id="deleteAllByWhere">
        DELETE FROM cy_tk_cf_simple
        WHERE 1=1
        <if test="whereSql!=null">
            ${whereSql}
        </if>
    </delete>

    <select id="findByName" resultMap="simpleResultMap">
        SELECT <include refid="all_column"/>
        FROM cy_tk_cf_simple
        WHERE name = #{name}
    </select>

    <select id="findByNameAndNotId" resultMap="simpleResultMap">
        SELECT <include refid="all_column"/>
        FROM cy_tk_cf_simple
        WHERE name = #{name}
        AND id != #{id}
    </select>

</mapper>